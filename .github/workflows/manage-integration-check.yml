name: Manage integration check

on:
  workflow_run:
    workflows: ["Integration tests"]

jobs:
  create-check:
    runs-on: ubuntu-latest
    outputs:
      check_id: ${{ steps.create-check.outputs.result }}
    steps:
      - name: Create check
        uses: actions/github-script@v6
        id: create-check
        if: ${{ github.event.action == 'requested' || github.event.action == 'in_progress' }}
        with:
          script: |
            const head_sha = context.payload.workflow_run.head_sha;
            const check = await github.rest.checks.create({
              ...context.repo,
              head_sha,
              name: "integration-test-result",
              status: "in_progress",
              output: {
                title: "Integration Test Aggregate Result",
                summary: `Synthetic check capturing the result of the <a href="${context.payload.workflow_run.html_url}">integration-test workflow run</a>`,
              }
            });
            return check.data.id;
  update-check:
    runs-on: ubuntu-latest
    steps:
      - name: Update check result
        uses: actions/github-script@v6
        if: ${{ github.event.action == 'completed' }}
        with:
          script: |
            // Update the check run
            const currentWorkflowRunUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            const head_sha = context.payload.workflow_run.head_sha;
            const runs = await github.paginate(github.rest.checks.listForRef, {
              ...context.repo,
              ref: head_sha,
              check_name: "integration-test-result",
            })
            core.debug(`integration-test-result check runs: ${JSON.stringify(runs, null, 2)}`);
            if (!runs.length) {
              core.setFailed(`No integration-test-result check found for commit ${head_sha}`);
              return;
            }

            const filtRuns = runs.filter(run => !run.output.summary || !run.output.summary.includes(currentWorkflowRunUrl));
            if (!filtRuns.length) {
              core.setFailed(`No integration-test-result check for commit ${head_sha} unattached or attached to ${currentWorkflowRunUrl}`);
              return;
            }

            const descRuns = filtRuns.sort((a, b) => Date.parse(b.started_at) - Date.parse(a.started_at));
            const latestRun = descRuns[0];

            await github.rest.checks.update({
              ...context.repo,
              check_run_id: latestRun.id,
              status: "completed",
              conclusion: context.payload.workflow_run.conclusion,
            });
